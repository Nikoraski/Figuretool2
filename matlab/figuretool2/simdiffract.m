function simdiffract(hklexpr,range,Uiso,drawreccell)
global elemnolist xyzlist coordtype unitcell res unitcellset;
xyzuse=xyzlist(unitcellset,:);
if strcmpi(coordtype,'Cartesian') xyzuse=xyzuse/unitcell; end
cellvolume=det(unitcell);
reccell=zeros(3);
reccell(1,:)=cross(unitcell(2,:),unitcell(3,:))/cellvolume;
reccell(2,:)=cross(unitcell(3,:),unitcell(1,:))/cellvolume;
reccell(3,:)=cross(unitcell(1,:),unitcell(2,:))/cellvolume;
z=elemnolist;
coordlist=[];
temp=hklexpr;
for h=range(1):range(2)
   for k=range(3):range(4)
      for l=range(5):range(6)
         hp=eval(temp{1});kp=eval(temp{2});lp=eval(temp{3});
         hkl0=[hp,kp,lp];
         if all(hkl0>=range([1,3,5]))&&all(hkl0<=range([2,4,6]))&&isequal(hkl0,round(hkl0)) coordlist=[coordlist;hkl0]; end
      end
   end
end
[xr,yr,zr]=sphere(12+res);
coordlist=unique(coordlist,'rows');
dm2list=sum((coordlist*reccell).^2,2);
ff=getformfactor();
formfactor=bsxfun(@plus,bsxfun(@times,ff(1,z),exp(-dm2list/4*ff(2,z)))+bsxfun(@times,ff(3,z),exp(-dm2list/4*ff(4,z)))+...
   bsxfun(@times,ff(5,z),exp(-dm2list/4*ff(6,z)))+bsxfun(@times,ff(7,z),exp(-dm2list/4*ff(8,z))),ff(9,z));
f=abs(sum(exp(coordlist*xyzuse'*pi*2i).*formfactor,2));
thermal=exp(-2*pi^2*Uiso*dm2list);
I=(f/sum(z)).^2.*thermal;
figure('tag','fig'); hold on;
rscale=10/(norm(reccell(1,:))+norm(reccell(2,:))+norm(reccell(3,:)));
reclist=coordlist*reccell*rscale;
if drawreccell
   arrow3d([0,0,0],reccell(1,:)*rscale,pi/12,'cylinder',[0.25,0.25],[24,24],[1,0,0]);
   arrow3d([0,0,0],reccell(2,:)*rscale,pi/12,'cylinder',[0.25,0.25],[24,24],[0,0.7,0]);
   arrow3d([0,0,0],reccell(3,:)*rscale,pi/12,'cylinder',[0.25,0.25],[24,24],[0,0,1]);
end
for j=1:size(coordlist,1)
   radius=I(j)^(1/3);
   surf(xr*radius+reclist(j,1),yr*radius+reclist(j,2),zr*radius+reclist(j,3),'FaceColor',[0,0,0],'FaceLighting','none');
end
view(fitsuperplane(reclist));
axis equal; axis off; camzoom(1.0); set(gcf,'Color',[1,1,1]);

%  Functions arrow3d and rotatedata are obtained from MathWorks file exchange. Original comments have been removed.
%  http://www.mathworks.com/matlabcentral/fileexchange/8396-draw-3d-arrows/ (author: Changshun Deng)

function arrow3d(start,stop,ang,ltype,p,n,color0)
dvec=stop-start;
dis=sqrt(sum(dvec.^2,2));
hv=min(dis)*p(1);
init_stop=[zeros(size(dis)) zeros(size(dis)) (dis-hv).*ones(size(dis))];
cosrang=acos(dvec(:,3)./dis);
nvec=[-dvec(:,2) dvec(:,1) zeros(size(dis))];
if strcmpi(ltype,'line')
   for i=1:length(dis)
      [rx,ry,rz]=rotatedata(init_stop(i,1),init_stop(i,2),init_stop(i,3),nvec(i,:),cosrang(i),color0);
      line([start(i,1);start(i,1)+rx],[start(i,2);start(i,2)+ry],[start(i,3);start(i,3)+rz]);
   end
else
   for i=1:length(dis)
      r=hv*tan(ang).*p(2);
      [xi,yi,zi]=cylinder(r.*[1,1],n(2));
      zi=zi.*(dis(i)-hv);
      if all(nvec(i,:)==0)
         nvec(i,:)=[0,1,0];
      end
      [rx,ry,rz]=rotatedata(xi,yi,zi,nvec(i,:),cosrang(i),[0,0,0]);
      cx=start(i,1)+rx;cy=start(i,2)+ry;cz=start(i,3)+rz;
      surf(cx,cy,cz,'edgecolor','none','facecolor',color0);
      patch(cx(1,:),cy(1,:),cz(1,:),color0,'edgecolor','none');
   end
end
pv=dis-hv;
for i=1:length(dis)
   [xi,yi,zi]=cylinder([tan(ang),0],n(1));
   xi=xi*hv;yi=yi*hv;zi=zi*hv+pv(i);
   [rx,ry,rz]=rotatedata(xi,yi,zi,nvec(i,:),cosrang(i),[0,0,0]);
   cx=start(i,1)+rx;cy=start(i,2)+ry;cz=start(i,3)+rz;
   surf(cx,cy,cz,'edgecolor','none','facecolor',color0);
   patch(cx(1,:),cy(1,:),cz(1,:),color0,'edgecolor','none');
end

function [newx,newy,newz]=rotatedata(xdata,ydata,zdata,azel,alpha,origin)
if numel(azel)==2
   theta=azel(1);
   phi=azel(2);
   u=[cos(phi)*cos(theta);cos(phi)*sin(theta);sin(phi)];
elseif numel(azel)==3
   u=azel(:)/norm(azel);
end
alph=alpha;
cosa=cos(alph);
sina=sin(alph);
vera=1-cosa;
x0=u(1);
y0=u(2);
z0=u(3);
rot=[cosa+x0^2*vera x0*y0*vera-z0*sina x0*z0*vera+y0*sina; ...
   x0*y0*vera+z0*sina cosa+y0^2*vera y0*z0*vera-x0*sina; ...
   x0*z0*vera-y0*sina y0*z0*vera+x0*sina cosa+z0^2*vera]';
[m,n]=size(xdata);
newxyz=[xdata(:),ydata(:),zdata(:)];
newxyz=newxyz*rot;
newx=origin(1)+reshape(newxyz(:,1),m,n);
newy=origin(2)+reshape(newxyz(:,2),m,n);
newz=origin(3)+reshape(newxyz(:,3),m,n);

function vnorm=fitsuperplane(xyzuse)
reduced=xyzuse-repmat(mean(xyzuse,1),size(xyzuse,1),1);
[vnorm,~]=eig(reduced'*reduced);
vnorm=vnorm(:,1)';

function formfactor=getformfactor()
%Form factor data taken from ITC Vol.C, pp578-580.
formfactor=[0.493002,0.8734,1.1282,1.5919,2.0545,2.31,12.2126,3.0485,3.5392,3.9553,4.7626,5.4204,6.4202,6.2915,6.4345,6.9053,11.4604,7.4845,8.2186,8.6266,9.189,9.7595,10.2971,10.6406,11.2819,11.7695,12.2841,12.8376,13.338,14.0743,15.2354,16.0816,16.6723,17.0006,17.1789,17.3555,17.1784,17.5663,17.776,17.8765,17.6142,3.7025,19.1301,19.2674,19.2957,19.3319,19.2808,19.2214,19.1624,19.1889,19.6418,19.9644,20.1472,20.2933,20.3892,20.3361,20.578,21.1671,22.044,22.6845,23.3405,24.0042,24.6274,25.0709,25.8976,26.507,26.9049,27.6563,28.1819,28.6641,28.9476,29.144,29.2024,29.0818,28.7621,28.1894,27.3049,27.0059,16.8819,20.6809,27.5446,31.0617,33.3689,34.6726,35.3163,35.5631,35.9299,35.763,35.6597,35.5645,35.8847,36.0228,36.1874,36.5254,36.6706,36.6488,36.7881,36.9185;
   10.5109,9.1037,3.9546,43.6427,23.2185,20.8439,0.0057,13.2771,10.2825,8.4042,3.285,2.8275,3.0387,2.4386,1.9067,1.4679,0.0104,0.9072,12.7949,10.4421,9.0213,7.8508,6.8657,6.1038,5.3409,4.7611,4.2791,3.8785,3.5828,3.2655,3.0669,2.8509,2.6345,2.4098,2.1723,1.9384,1.7888,1.5564,1.4029,1.27618,1.18865,0.2772,0.864132,0.80852,0.751536,0.698655,0.6446,0.5946,0.5476,5.8303,5.3034,4.81742,4.347,3.9282,3.569,3.216,2.94817,2.81219,2.77393,2.66248,2.5627,2.47274,2.3879,2.25341,2.24256,2.1802,2.07051,2.07356,2.02859,1.9889,1.90182,1.83262,1.77333,1.72029,1.67191,1.62903,1.59279,1.51293,0.4611,0.545,0.65515,0.6902,0.704,0.700999,0.68587,0.6631,0.646453,0.616341,0.589092,0.563359,0.547751,0.5293,0.511929,0.499384,0.483629,0.465154,0.451018,0.437533;
   0.322912,0.6309,0.7508,1.1278,1.3326,1.02,3.1322,2.2868,2.6412,3.1125,3.1736,2.1735,1.9002,3.0353,4.1791,5.2034,7.1964,6.7723,7.4398,7.3873,7.3679,7.3558,7.3511,7.3537,7.3573,7.3573,7.3409,7.292,7.1676,7.0318,6.7006,6.3747,6.0701,5.8196,5.2358,6.7286,9.6435,9.8184,10.2946,10.948,12.0144,17.2356,11.0948,12.9182,14.3501,15.5017,16.6885,17.6444,18.5596,19.1005,19.0455,19.0138,18.9949,19.0298,19.1062,19.297,19.599,19.7695,19.6697,19.6847,19.6095,19.4258,19.0886,19.0798,18.2185,17.6383,17.294,16.4285,15.8851,15.4345,15.2208,15.1726,15.2293,15.43,15.7189,16.155,16.7296,17.7639,18.5913,19.0417,19.1584,13.0637,12.951,15.4733,19.0211,21.2816,23.0547,22.9064,23.1032,23.4219,23.2948,23.4128,23.5964,23.8083,24.0992,24.4096,24.7736,25.1995;
   26.1257,3.3568,1.0524,1.8623,1.021,10.2075,9.8933,5.7011,4.2944,3.4262,8.8422,79.2611,0.7426,32.3337,27.157,22.2151,1.1662,14.8407,0.7748,0.6599,0.5729,0.5,0.4385,0.392,0.3432,0.3072,0.2784,0.2565,0.247,0.2333,0.2412,0.2516,0.2647,0.2726,16.5796,16.5623,17.3151,14.0988,12.8006,11.916,11.766,1.0958,8.14487,8.43467,8.21758,7.98929,7.4726,6.9089,6.3776,0.5031,0.4607,0.420885,0.3814,0.344,0.3107,0.2756,0.244475,0.226836,0.222087,0.210628,0.202088,0.196451,0.1942,0.181951,0.196143,0.202172,0.19794,0.223545,0.238849,0.257119,9.98519,9.5999,9.37046,9.2259,9.09227,8.97948,8.86553,8.81174,8.6216,8.4484,8.70751,2.3576,2.9238,3.55078,3.97458,4.0691,4.17619,3.87135,3.65155,3.46204,3.41519,3.3253,3.25396,3.26371,3.20647,3.08997,3.04619,3.00775;
   0.140191,0.3112,0.6175,0.5391,1.0979,1.5886,2.0125,1.5463,1.517,1.4546,1.2674,1.2269,1.5936,1.9891,1.78,1.4379,6.2556,0.6539,1.0519,1.5899,1.6409,1.6991,2.0703,3.324,3.0193,3.5222,4.0034,4.4438,5.6158,5.1652,4.3591,3.7068,3.4313,3.9731,5.6377,5.5493,5.1399,5.422,5.72629,5.41732,4.04183,12.8876,4.64901,4.86337,4.73425,5.29537,4.8045,4.461,4.2948,4.4585,5.0371,6.14487,7.5138,8.9767,10.662,10.888,11.3727,11.8513,12.3856,12.774,13.1235,13.4396,13.7603,13.8518,14.3167,14.5596,14.5583,14.9779,15.1542,15.3087,15.1,14.7586,14.5135,14.4327,14.5564,14.9305,15.6115,15.7131,25.5582,21.6575,15.538,18.442,16.5877,13.1138,9.49887,8.0037,12.1439,12.4739,12.5977,12.7473,14.1891,14.9491,15.6402,16.7707,17.3415,17.399,17.8919,18.3317;
   3.14236,22.9276,85.3905,103.483,60.3498,0.5687,28.9975,0.3239,0.2615,0.2306,0.3136,0.3808,31.5472,0.6785,0.526,0.2536,18.5194,43.8983,213.187,85.7484,136.108,35.6338,26.8938,20.2626,17.8674,15.3535,13.5359,12.1763,11.3966,10.3163,10.7805,11.4468,12.9479,15.2372,0.2609,0.2261,0.2748,0.1664,0.125599,0.117622,0.204785,11.004,21.5707,24.7997,25.8749,25.2052,24.6605,24.7008,25.8499,26.8909,27.9074,28.5284,27.766,26.4659,24.3879,20.2073,18.7726,17.6083,16.7669,15.885,15.1009,14.3996,13.7546,12.9331,12.6648,12.1899,11.4407,11.3604,10.9975,10.6647,0.261033,0.275116,0.295977,0.321703,0.3505,0.382661,0.417916,0.424593,1.4826,1.5729,1.96347,8.618,8.7937,9.55642,11.3824,14.0422,23.1052,19.9887,18.599,17.8309,16.9235,16.0927,15.3622,14.9455,14.3136,13.4346,12.8946,12.4044;
   0.04081,0.178,0.4653,0.7029,0.7068,0.865,1.1663,0.867,1.0243,1.1251,1.1128,2.3073,1.9646,1.541,1.4908,1.5863,1.6455,1.6442,0.8659,1.0211,1.468,1.9021,2.0571,1.4922,2.2441,2.3045,2.3488,2.38,1.6735,2.41,2.9623,3.683,4.2779,4.3543,3.9851,3.5375,1.5292,2.6694,3.26588,3.65721,3.53346,3.7429,2.71263,1.56756,1.28918,0.605844,1.0463,1.6029,2.0396,2.4663,2.6827,2.5239,2.2735,1.99,1.4953,2.6959,3.28719,3.33049,2.82428,2.85137,2.87516,2.89604,2.9227,3.54545,2.95354,2.96577,3.63837,2.98233,2.98706,2.98963,3.71601,4.30013,4.76492,5.11982,5.44174,5.67589,5.83377,5.7837,5.86,5.9676,5.52593,5.9696,6.4692,7.02588,7.42518,7.4433,2.11253,3.21097,4.08655,4.80703,4.17287,4.188,4.1855,3.47947,3.49331,4.21665,4.23284,4.24391;
   57.7997,0.9821,168.261,0.542,0.1403,51.6512,0.5826,32.9089,26.1476,21.7184,129.424,7.1937,85.0886,81.6937,68.1645,56.172,47.7784,33.3929,41.6841,178.437,51.3531,116.105,102.478,98.7399,83.7543,76.8805,71.1692,66.3421,64.8126,58.7097,61.4135,54.7625,47.7972,43.8163,41.4328,39.3972,164.934,132.376,104.354,87.6627,69.7957,61.6584,86.8472,94.2928,98.6062,76.8986,99.8156,87.4825,92.8029,83.9571,75.2825,70.8403,66.8776,64.2658,213.904,167.202,133.124,127.113,143.644,137.903,132.721,128.007,123.174,101.398,115.362,111.874,92.6566,105.703,102.961,100.417,84.3298,72.029,63.3644,57.056,52.0861,48.1647,45.0011,38.6103,36.3956,38.3246,45.8149,47.2579,48.0093,47.0045,45.4715,44.2473,150.645,142.325,117.02,99.1722,105.251,100.613,97.4908,105.98,102.273,88.4834,86.003,83.7881;
   0.003038,0.0064,0.0377,0.0385,-0.1932,0.2156,-11.529,0.2508,0.2776,0.3515,0.676,0.8584,1.1151,1.1407,1.1149,0.8669,-9.5574,1.4445,1.4228,1.3751,1.3329,1.2807,1.2199,1.1832,1.0896,1.0369,1.0118,1.0341,1.191,1.3041,1.7189,2.1313,2.531,2.8409,2.9557,2.825,3.4873,2.5064,1.91213,2.06929,3.75591,4.3875,5.40428,5.37874,5.328,5.26593,5.179,5.0694,4.9391,4.7821,4.5909,4.352,4.0712,3.7118,3.3352,2.7731,2.14678,1.86264,2.0583,1.98486,2.02876,2.20963,2.5745,2.4196,3.58324,4.29728,4.56796,5.92046,6.75621,7.56672,7.97628,8.58154,9.24354,9.8875,10.472,11.0005,11.4722,11.6883,12.0658,12.6089,13.1746,13.4118,13.5782,13.677,13.7108,13.6905,13.7247,13.6211,13.5266,13.4314,13.4287,13.3966,13.3573,13.3812,13.3592,13.2887,13.2754,13.2674];